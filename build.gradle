plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ceos.vote'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.jetbrains:annotations:24.0.0'
    annotationProcessor('org.projectlombok:lombok')
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // env
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'


    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.security:spring-security-test'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //mysql
    implementation 'com.mysql:mysql-connector-j'

}

tasks.named('compileJava') {
    doLast {
        def generated = layout.buildDirectory.dir("generated/source/apt/main").get().asFile
        sourceSets.main.java.srcDirs += generated
    }
}

sourceSets {
    main {
        java {
            srcDirs += layout.buildDirectory.dir("generated/source/apt/main").get().asFile
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
